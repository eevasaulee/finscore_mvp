import streamlit as st
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
st.title("finscore.ai ‚Äî MVP —Å–∫–æ—Ä–∏–Ω–≥–∞")
st.markdown("""
### üí° –û –ø—Ä–æ–µ–∫—Ç–µ:
–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ **finscore.ai** –ø–æ–∑–≤–æ–ª—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ä–∏—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞
–Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–µ–º–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ù–∏–∂–µ ‚Äî –¥–µ–º–æ-–ø—Ä–æ—Ç–æ—Ç–∏–ø —Å–∫–æ—Ä–∏–Ω–≥–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã.
""")

# === –í–≤–æ–¥ –¥–∞–Ω–Ω—ã—Ö ===
st.subheader("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–ª–∏–µ–Ω—Ç–∞:")
age = st.slider("–í–æ–∑—Ä–∞—Å—Ç", 18, 75, 30)
income = st.slider("–î–æ—Ö–æ–¥ (–≤ —Å–æ–º–∞—Ö)", 10000, 500000, 100000)
experience = st.slider("–°—Ç–∞–∂ —Ä–∞–±–æ—Ç—ã (–ª–µ—Ç)", 0, 50, 5)
claims = st.slider("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–∞—Ö–æ–≤—ã—Ö —Å–ª—É—á–∞–µ–≤ –≤ –ø—Ä–æ—à–ª–æ–º", 0, 10, 0)
insurance_type = st.selectbox("–¢–∏–ø —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è", ["–∞–≤—Ç–æ", "–∑–¥–æ—Ä–æ–≤—å–µ", "–∏–º—É—â–µ—Å—Ç–≤–æ"])

# –ö–æ–¥–∏—Ä–æ–≤–∫–∞ —Ç–∏–ø–∞ —Å—Ç—Ä–∞—Ö–æ–≤–∞–Ω–∏—è
insurance_map = {"–∞–≤—Ç–æ": 0, "–∑–¥–æ—Ä–æ–≤—å–µ": 1, "–∏–º—É—â–µ—Å—Ç–≤–æ": 2}
insurance_code = insurance_map[insurance_type]

# === –ú–æ–¥–µ–ª—å ===
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ–µ–π–∫–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±—É—á–µ–Ω–∏—è
np.random.seed(42)
X_fake = np.random.randint(18, 60, size=(100, 5))
y_fake = np.random.choice([0, 1], size=100, p=[0.7, 0.3])  # 0 ‚Äî –Ω–∏–∑–∫–∏–π —Ä–∏—Å–∫, 1 ‚Äî –≤—ã—Å–æ–∫–∏–π

model = RandomForestClassifier()
model.fit(X_fake, y_fake)

# === –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ ===
if st.button("–û—Ü–µ–Ω–∏—Ç—å —Ä–∏—Å–∫"):
    X_input = np.array([[age, income, experience, claims, insurance_code]])
    prediction = model.predict_proba(X_input)[0][1]  # –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å "–≤—ã—Å–æ–∫–æ–≥–æ —Ä–∏—Å–∫–∞"

    if prediction > 0.7:
        level = "üü• –í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫"
        recommendation = "–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏/–∏–ª–∏ –æ—Ç–∫–∞–∑ –≤ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏"
    elif prediction > 0.4:
        level = "üü® –°—Ä–µ–¥–Ω–∏–π —Ä–∏—Å–∫"
        recommendation = "–ú–æ–∂–Ω–æ –æ–¥–æ–±—Ä–∏—Ç—å, –Ω–æ —Å –ø–æ–≤—ã—à–µ–Ω–Ω—ã–º —Ç–∞—Ä–∏—Ñ–æ–º"
    else:
        level = "üü© –ù–∏–∑–∫–∏–π —Ä–∏—Å–∫"
        recommendation = "–ö–ª–∏–µ–Ω—Ç –≤—ã–≥–ª—è–¥–∏—Ç –Ω–∞–¥—ë–∂–Ω–æ. –ú–æ–∂–Ω–æ –æ—Ñ–æ—Ä–º–ª—è—Ç—å."

    st.subheader("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç")
    st.write(f"**–û—Ü–µ–Ω–∫–∞ —Ä–∏—Å–∫–∞:** {prediction:.2f}")
    st.write(f"**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {level}")
    st.info(f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: {recommendation}")
